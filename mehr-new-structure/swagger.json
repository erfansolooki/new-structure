{
  "openapi": "3.0.0",
  "paths": {
    "/api/wallet": {
      "post": {
        "operationId": "WalletController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWalletDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Wallet"
                }
              }
            }
          }
        },
        "tags": ["Wallet"]
      },
      "get": {
        "operationId": "WalletController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedWalletResponseDto"
                }
              }
            }
          }
        },
        "tags": ["Wallet"]
      }
    },
    "/api/wallet/details": {
      "get": {
        "operationId": "WalletController_details",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["deposit", "withdrawal", "transfer", "loan"]
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "completed", "failed"]
            }
          },
          {
            "name": "fromWalletId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "toWalletId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletDetailsResponseDto"
                }
              }
            }
          }
        },
        "tags": ["Wallet"]
      }
    },
    "/api/wallet/{id}": {
      "get": {
        "operationId": "WalletController_findOneByAdmin",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["deposit", "withdrawal", "transfer", "loan"]
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "completed", "failed"]
            }
          },
          {
            "name": "fromWalletId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "toWalletId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletDetailsResponseDto"
                }
              }
            }
          }
        },
        "tags": ["Wallet"]
      }
    },
    "/api/wallet/{id}/qrcode": {
      "get": {
        "operationId": "WalletController_getQrcode",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          }
        },
        "tags": ["Wallet"]
      }
    },
    "/api/wallet/increase-balance": {
      "put": {
        "operationId": "WalletController_increaseBalance",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFundTransferDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Wallet"
                }
              }
            }
          }
        },
        "tags": ["Wallet"]
      }
    },
    "/api/wallet/decrease-balance": {
      "put": {
        "operationId": "WalletController_decreaseBalance",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFundTransferDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Wallet"
                }
              }
            }
          }
        },
        "tags": ["Wallet"]
      }
    },
    "/api/wallet/fund-transfer": {
      "post": {
        "operationId": "WalletController_fundTransfer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFundTransferDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletTransaction"
                }
              }
            }
          }
        },
        "tags": ["Wallet"]
      }
    },
    "/api/wallet/admin-fund-transfer": {
      "post": {
        "operationId": "WalletController_adminFundTransfer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FundTransferDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletTransaction"
                }
              }
            }
          }
        },
        "tags": ["Wallet"]
      }
    },
    "/api/wallet/pay-treatment-plan": {
      "post": {
        "operationId": "WalletController_payTreatmentPlan",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayTreatmentPlanDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletTransaction"
                }
              }
            }
          }
        },
        "tags": ["Wallet"]
      }
    },
    "/api/wallet/admin-pay-treatment-plan": {
      "post": {
        "operationId": "WalletController_payTreatmentPlanByAdmin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayTreatmentPlanByAdminDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletTransaction"
                }
              }
            }
          }
        },
        "tags": ["Wallet"]
      }
    },
    "/api/wallet/revert-payment/{paidTreatmentPlanId}": {
      "post": {
        "operationId": "WalletController_revertPayment",
        "parameters": [
          {
            "name": "paidTreatmentPlanId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletTransaction"
                }
              }
            }
          }
        },
        "tags": ["Wallet"]
      }
    },
    "/api/wallet/admin-revert-payment/{paidTreatmentPlanId}": {
      "post": {
        "operationId": "WalletController_revertPaymentByAdmin",
        "parameters": [
          {
            "name": "paidTreatmentPlanId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletTransaction"
                }
              }
            }
          }
        },
        "tags": ["Wallet"]
      }
    },
    "/api/wallet/pay-pre-invoice": {
      "post": {
        "operationId": "WalletController_payPreInvoice",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayPreInvoice"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletTransaction"
                }
              }
            }
          }
        },
        "tags": ["Wallet"]
      }
    },
    "/api/wallet/pay-pre-invoice-by-admin": {
      "post": {
        "operationId": "WalletController_payPreInvoiceByAdmin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayPreInvoice"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletTransaction"
                }
              }
            }
          }
        },
        "tags": ["Wallet"]
      }
    },
    "/api/wallet/revert-pre-invoice/{paidPreInvoiceId}": {
      "post": {
        "operationId": "WalletController_revertPreInvoice",
        "parameters": [
          {
            "name": "paidPreInvoiceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletTransaction"
                }
              }
            }
          }
        },
        "tags": ["Wallet"]
      }
    },
    "/api/wallet/admin-revert-pre-invoice/{paidPreInvoiceId}": {
      "post": {
        "operationId": "WalletController_revertPreInvoiceByAdmin",
        "parameters": [
          {
            "name": "paidPreInvoiceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletTransaction"
                }
              }
            }
          }
        },
        "tags": ["Wallet"]
      }
    },
    "/api/wallet-transactions": {
      "get": {
        "operationId": "WalletTransactionController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["deposit", "withdrawal", "transfer", "loan"]
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "completed", "failed"]
            }
          },
          {
            "name": "fromWalletId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "toWalletId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTransactionResponse"
                }
              }
            }
          }
        },
        "tags": ["WalletTransaction"]
      }
    },
    "/api/wallet-transactions/admin": {
      "get": {
        "operationId": "WalletTransactionController_findAllByAdmin",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["deposit", "withdrawal", "transfer", "loan"]
            }
          },
          {
            "name": "createdAt",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["pending", "completed", "failed"]
            }
          },
          {
            "name": "fromWalletId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "toWalletId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTransactionResponse"
                }
              }
            }
          }
        },
        "tags": ["WalletTransaction"]
      }
    },
    "/api/tickets": {
      "post": {
        "operationId": "TicketController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateTicketDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                }
              }
            }
          }
        },
        "tags": ["Tickets"]
      },
      "get": {
        "operationId": "TicketController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["open", "underReview", "answered", "closed"]
            }
          },
          {
            "name": "priority",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["high", "medium", "low"]
            }
          },
          {
            "name": "categoryId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTicketResponseDto"
                }
              }
            }
          }
        },
        "tags": ["Tickets"]
      }
    },
    "/api/tickets/mine": {
      "get": {
        "operationId": "TicketController_findMy",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["open", "underReview", "answered", "closed"]
            }
          },
          {
            "name": "priority",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["high", "medium", "low"]
            }
          },
          {
            "name": "categoryId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTicketResponseDto"
                }
              }
            }
          }
        },
        "tags": ["Tickets"]
      }
    },
    "/api/tickets/{id}": {
      "get": {
        "operationId": "TicketController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketResponseDto"
                }
              }
            }
          }
        },
        "tags": ["Tickets"]
      }
    },
    "/api/tickets/{id}/admin": {
      "get": {
        "operationId": "TicketController_findOneByAdmin",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketResponseDto"
                }
              }
            }
          }
        },
        "tags": ["Tickets"]
      }
    },
    "/api/tickets/answer": {
      "post": {
        "operationId": "TicketController_answer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateTicketAnswerDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketAnswer"
                }
              }
            }
          }
        },
        "tags": ["Tickets"]
      }
    },
    "/api/tickets/status": {
      "patch": {
        "operationId": "TicketController_updateStatus",
        "parameters": [
          {
            "name": "ticketId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                }
              }
            }
          }
        },
        "tags": ["Tickets"]
      }
    },
    "/api/tickets/{id}/close": {
      "put": {
        "operationId": "TicketController_close",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                }
              }
            }
          }
        },
        "tags": ["Tickets"]
      }
    },
    "/api/ticket-categories": {
      "get": {
        "operationId": "TicketCategoryController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTicketCategoryResponseDto"
                }
              }
            }
          }
        },
        "tags": ["Ticket Categories"]
      },
      "post": {
        "operationId": "TicketCategoryController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTicketCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketCategory"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketCategoryResponseDto"
                }
              }
            }
          }
        },
        "tags": ["Ticket Categories"]
      }
    },
    "/api/ticket-categories/{id}": {
      "get": {
        "operationId": "TicketCategoryController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketCategory"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketCategoryResponseDto"
                }
              }
            }
          }
        },
        "tags": ["Ticket Categories"]
      },
      "put": {
        "operationId": "TicketCategoryController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTicketCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketCategory"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketCategoryResponseDto"
                }
              }
            }
          }
        },
        "tags": ["Ticket Categories"]
      },
      "delete": {
        "operationId": "TicketCategoryController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketCategoryResponseDto"
                }
              }
            }
          }
        },
        "tags": ["Ticket Categories"]
      }
    },
    "/api/notifications/mine": {
      "get": {
        "operationId": "NotificationController_findMine",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              }
            }
          }
        },
        "tags": ["Notification"]
      }
    },
    "/api/reminders": {
      "post": {
        "operationId": "ReminderController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReminderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReminderEntity"
                }
              }
            }
          }
        },
        "tags": ["Reminder"]
      },
      "get": {
        "operationId": "ReminderController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Reminder"]
      }
    },
    "/api/reminders/{id}": {
      "get": {
        "operationId": "ReminderController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReminderEntity"
                }
              }
            }
          }
        },
        "tags": ["Reminder"]
      },
      "patch": {
        "operationId": "ReminderController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReminderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": ["Reminder"]
      },
      "delete": {
        "operationId": "ReminderController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Reminder"]
      }
    },
    "/api/address/provinces": {
      "get": {
        "operationId": "AddressController_findAllProvinces",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": ["Address"]
      }
    },
    "/api/address/cities": {
      "get": {
        "operationId": "AddressController_findCities",
        "parameters": [
          {
            "name": "province",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "required": true,
            "in": "query",
            "schema": {
              "default": "persian",
              "type": "string",
              "enum": ["persian", "english"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": ["Address"]
      }
    },
    "/api/permissions": {
      "get": {
        "operationId": "PermissionController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionCategory"
                  }
                }
              }
            }
          }
        },
        "tags": ["Permission"]
      },
      "post": {
        "operationId": "PermissionController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePermissionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          }
        },
        "tags": ["Permission"]
      }
    },
    "/api/permissions/{id}": {
      "get": {
        "operationId": "PermissionController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          }
        },
        "tags": ["Permission"]
      },
      "put": {
        "operationId": "PermissionController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePermissinDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          }
        },
        "tags": ["Permission"]
      },
      "delete": {
        "operationId": "PermissionController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Permission"]
      }
    },
    "/api/permissions/dissmis-from-user": {
      "put": {
        "operationId": "PermissionController_dissmisPermissions",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantPermissionToUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Permission"]
      }
    },
    "/api/permissions/grant-to-user": {
      "post": {
        "operationId": "PermissionController_grantPermissions",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantPermissionToUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["Permission"]
      }
    },
    "/api/permission-categories": {
      "get": {
        "operationId": "PermissionCategoryController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["PermissionCategory"]
      }
    },
    "/api/permission-categories/{id}": {
      "get": {
        "operationId": "PermissionCategoryController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["PermissionCategory"]
      }
    },
    "/api/roles": {
      "post": {
        "operationId": "RoleController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          }
        },
        "tags": ["Role"]
      },
      "get": {
        "operationId": "RoleController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          }
        },
        "tags": ["Role"]
      }
    },
    "/api/roles/{id}": {
      "get": {
        "operationId": "RoleController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          }
        },
        "tags": ["Role"]
      },
      "delete": {
        "operationId": "RoleController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Role"]
      },
      "put": {
        "operationId": "RoleController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRoleDto"
                }
              }
            }
          }
        },
        "tags": ["Role"]
      }
    },
    "/api/roles/grant-to-user": {
      "post": {
        "operationId": "RoleController_grantToUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantToUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["Role"]
      }
    },
    "/api/roles/dismiss-from-user": {
      "put": {
        "operationId": "RoleController_dismissFromUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantToUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Role"]
      }
    },
    "/api/roles/grant-permissions": {
      "post": {
        "operationId": "RoleController_grantPermissions",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantPermissionToRoleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["Role"]
      }
    },
    "/api/roles/dissmis-permissions": {
      "put": {
        "operationId": "RoleController_dissmisPermissions",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantPermissionToRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Role"]
      }
    },
    "/api/roles/{roleId}/permissions": {
      "get": {
        "operationId": "RoleController_getPermissions",
        "parameters": [
          {
            "name": "roleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              }
            }
          }
        },
        "tags": ["Role"]
      }
    },
    "/api/work-schedules": {
      "post": {
        "operationId": "WorkScheduleController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkScheduleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSchedule"
                }
              }
            }
          }
        },
        "tags": ["WorkSchedule"]
      },
      "get": {
        "operationId": "WorkScheduleController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter.dayOfWeek",
            "required": false,
            "in": "query",
            "description": "Filter by dayOfWeek using operators like $eq, $gte, etc.",
            "schema": {
              "example": "$eq:sat",
              "type": "string"
            }
          },
          {
            "name": "filter.personnelId",
            "required": false,
            "in": "query",
            "description": "Filter by personnelId using operators like $eq, $gte, etc.",
            "schema": {
              "example": "$eq:4413d9ba-9c4f-49e9-8332-3c5796e16e29",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "example": ["createdAt:ASC", "updatedAt:ASC"],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedWorkScheduleResponse"
                }
              }
            }
          }
        },
        "tags": ["WorkSchedule"]
      },
      "patch": {
        "operationId": "WorkScheduleController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkScheduleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSchedule"
                }
              }
            }
          }
        },
        "tags": ["WorkSchedule"]
      }
    },
    "/api/work-schedules/{id}": {
      "get": {
        "operationId": "WorkScheduleController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSchedule"
                }
              }
            }
          }
        },
        "tags": ["WorkSchedule"]
      },
      "delete": {
        "operationId": "WorkScheduleController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["WorkSchedule"]
      }
    },
    "/api/dashborad/lab-orders": {
      "get": {
        "operationId": "LaboratoryOrderViewController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "laboratoryName",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "patientName",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "doctorName",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "treatmentTitle",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderStatus",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "PENDING",
                "ORDERED",
                "SENTBYCLINIC",
                "RECIVEDBYLAB",
                "INPROCCESS",
                "REORDERD",
                "MANUFATURED",
                "SENTBYLAB",
                "RECEIVED"
              ]
            }
          },
          {
            "name": "orderDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "orderNumber",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reciveByClinicDate",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "dentNameIds",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "noCache",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabOrderViewPaginatedResopnse"
                }
              }
            }
          }
        },
        "tags": ["Dashboard"]
      }
    },
    "/api/attendance": {
      "get": {
        "operationId": "AttendanceController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter.date",
            "required": false,
            "in": "query",
            "description": "Filter by date using operators like $eq, $gte, etc.",
            "schema": {
              "example": "$eq:2023-10-26",
              "type": "string"
            }
          },
          {
            "name": "filter.personnelId",
            "required": false,
            "in": "query",
            "description": "Filter by personnelId using operators like $eq, $gte, etc.",
            "schema": {
              "example": "$eq:mohammad",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "example": ["createdAt:ASC", "updatedAt:ASC"],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedAttendanceResponse"
                }
              }
            }
          }
        },
        "tags": ["Attendance"]
      },
      "post": {
        "operationId": "AttendanceController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAttendanceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttendanceEntity"
                }
              }
            }
          }
        },
        "tags": ["Attendance"]
      }
    },
    "/api/attendance/{id}": {
      "get": {
        "operationId": "AttendanceController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttendanceEntity"
                }
              }
            }
          }
        },
        "tags": ["Attendance"]
      },
      "put": {
        "operationId": "AttendanceController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAttendanceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttendanceEntity"
                }
              }
            }
          }
        },
        "tags": ["Attendance"]
      },
      "delete": {
        "operationId": "AttendanceController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Attendance"]
      }
    },
    "/api/sections": {
      "post": {
        "operationId": "SectionController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSectionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Section"
                }
              }
            }
          }
        },
        "tags": ["Section"]
      },
      "get": {
        "operationId": "SectionController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter.manager.id",
            "required": false,
            "in": "query",
            "description": "Filter by manager.id using operators like $eq, $gte, etc.",
            "schema": {
              "example": "$eq:253c4aa3-1363-488b-a50d-90cea849cd22",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "example": ["createdAt:ASC", "updatedAt:ASC"],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSectionResponse"
                }
              }
            }
          }
        },
        "tags": ["Section"]
      }
    },
    "/api/sections/assign-personnel": {
      "post": {
        "operationId": "SectionController_assignPersonnel",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachPersonnelDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Section"
                }
              }
            }
          }
        },
        "tags": ["Section"]
      }
    },
    "/api/sections/dismiss-personnel": {
      "patch": {
        "operationId": "SectionController_dismissPersonnel",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DetachPersonnelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Section"
                }
              }
            }
          }
        },
        "tags": ["Section"]
      }
    },
    "/api/sections/{id}": {
      "put": {
        "operationId": "SectionController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSectionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Section"
                }
              }
            }
          }
        },
        "tags": ["Section"]
      },
      "get": {
        "operationId": "SectionController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Section"
                }
              }
            }
          }
        },
        "tags": ["Section"]
      },
      "delete": {
        "operationId": "SectionController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Section"]
      }
    },
    "/api/referral-discount": {
      "post": {
        "operationId": "ReferralDiscountController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReferralDiscountDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralDiscount"
                }
              }
            }
          }
        },
        "tags": ["ReferralDiscount"]
      },
      "get": {
        "operationId": "ReferralDiscountController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter.patient.id",
            "required": false,
            "in": "query",
            "description": "Filter by patient.id using operators like $eq, $gte, etc.",
            "schema": {
              "example": "$eq:\u003Cuuid\u003E",
              "type": "string"
            }
          },
          {
            "name": "filter.personnel.id",
            "required": false,
            "in": "query",
            "description": "Filter by personnel.id using operators like $eq, $gte, etc.",
            "schema": {
              "example": "$eq:\u003Cuuid\u003E",
              "type": "string"
            }
          },
          {
            "name": "filter.treatment.id",
            "required": false,
            "in": "query",
            "description": "Filter by treatment.id using operators like $eq, $gte, etc.",
            "schema": {
              "example": "$eq:\u003Cuuid\u003E",
              "type": "string"
            }
          },
          {
            "name": "filter.status",
            "required": false,
            "in": "query",
            "description": "Filter by status using operators like $eq, $gte, etc.",
            "schema": {
              "example": "$eq:waiting",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "example": ["createdAt:ASC", "updatedAt:DESC"],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedReferralDiscountResponse"
                }
              }
            }
          }
        },
        "tags": ["ReferralDiscount"]
      }
    },
    "/api/referral-discount/{id}": {
      "get": {
        "operationId": "ReferralDiscountController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralDiscount"
                }
              }
            }
          }
        },
        "tags": ["ReferralDiscount"]
      },
      "put": {
        "operationId": "ReferralDiscountController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReferralDiscountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateReferralDiscountDto"
                }
              }
            }
          }
        },
        "tags": ["ReferralDiscount"]
      },
      "delete": {
        "operationId": "ReferralDiscountController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["ReferralDiscount"]
      }
    },
    "/api/referral-discount/{id}/status": {
      "put": {
        "operationId": "ReferralDiscountController_updateStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReferralDiscountStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["ReferralDiscount"]
      }
    },
    "/api/payments": {
      "post": {
        "operationId": "PayementController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        },
        "tags": ["Payement"]
      },
      "get": {
        "operationId": "PayementController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "paidAt",
            "required": false,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "description",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payer",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipient",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentMethod",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "treatmentId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "payerPatientId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "recipientDoctorId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Payement"]
      }
    },
    "/api/payments/id": {
      "get": {
        "operationId": "PayementController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        },
        "tags": ["Payement"]
      }
    },
    "/api/payments/{id}": {
      "put": {
        "operationId": "PayementController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        },
        "tags": ["Payement"]
      }
    },
    "/api/bills-payable": {
      "post": {
        "operationId": "BillPayableContorller_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBillPayableDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["BillPayableContorller"]
      },
      "get": {
        "operationId": "BillPayableContorller_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "debtor",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creditor",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "treatmentId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "deptorPatientId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "creditorDoctorId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["BillPayableContorller"]
      }
    },
    "/api/bills-payable/id": {
      "get": {
        "operationId": "BillPayableContorller_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["BillPayableContorller"]
      }
    },
    "/api/bills-payable/{id}": {
      "put": {
        "operationId": "BillPayableContorller_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBillPayableDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["BillPayableContorller"]
      }
    },
    "/api/payment-guarantee": {
      "post": {
        "operationId": "PaymentGuaranteeController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentGuaranteeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentGuarantee"
                }
              }
            }
          }
        },
        "tags": ["PaymentGuarantee"]
      },
      "get": {
        "operationId": "PaymentGuaranteeController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter.patientId",
            "required": false,
            "in": "query",
            "description": "Filter by patientId using operators like $eq, $gte, etc.",
            "schema": {
              "example": "$eq:\u003Cuuid\u003E",
              "type": "string"
            }
          },
          {
            "name": "filter.guarantorId",
            "required": false,
            "in": "query",
            "description": "Filter by guarantorId using operators like $eq, $gte, etc.",
            "schema": {
              "example": "$eq:\u003Cuuid\u003E",
              "type": "string"
            }
          },
          {
            "name": "filter.status",
            "required": false,
            "in": "query",
            "description": "Filter by status using operators like $eq, $gte, etc.",
            "schema": {
              "enum": ["WAITING", "CONFIRMED", "CANCELED"],
              "type": "string"
            }
          },
          {
            "name": "filter.isPremium",
            "required": false,
            "in": "query",
            "description": "Filter by isPremium using operators like $eq, $gte, etc.",
            "schema": {
              "enum": ["true", "false"],
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "example": ["createdAt:ASC", "updatedAt:DESC"],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPaymentGuaranteeResponse"
                }
              }
            }
          }
        },
        "tags": ["PaymentGuarantee"]
      }
    },
    "/api/payment-guarantee/mine": {
      "get": {
        "operationId": "PaymentGuaranteeController_findMine",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["PaymentGuarantee"]
      }
    },
    "/api/payment-guarantee/{id}": {
      "get": {
        "operationId": "PaymentGuaranteeController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentGuarantee"
                }
              }
            }
          }
        },
        "tags": ["PaymentGuarantee"]
      },
      "put": {
        "operationId": "PaymentGuaranteeController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentGuaranteeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["PaymentGuarantee"]
      },
      "delete": {
        "operationId": "PaymentGuaranteeController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["PaymentGuarantee"]
      }
    },
    "/api/payment-guarantee/{id}/status": {
      "put": {
        "operationId": "PaymentGuaranteeController_updateStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentGuaranteeStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["PaymentGuarantee"]
      }
    },
    "/api/invoices": {
      "post": {
        "operationId": "InvoiceController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        },
        "tags": ["Invoice"]
      },
      "get": {
        "operationId": "InvoiceController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "patientId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "date",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortType",
            "required": false,
            "in": "query",
            "schema": {
              "default": "DESC",
              "type": "string",
              "enum": ["ASC", "DESC"]
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "createdAt",
              "type": "string",
              "enum": ["createdAt", "updatedAt"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicePaginatedResopnse"
                }
              }
            }
          }
        },
        "tags": ["Invoice"]
      }
    },
    "/api/invoices/{id}": {
      "get": {
        "operationId": "InvoiceController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        },
        "tags": ["Invoice"]
      },
      "put": {
        "operationId": "InvoiceController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        },
        "tags": ["Invoice"]
      }
    },
    "/api/invoices/treatment-plan/{id}": {
      "get": {
        "operationId": "InvoiceController_findByTreatmentPlanId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            }
          }
        },
        "tags": ["Invoice"]
      }
    },
    "/api/invoices/{id}/atach-referral-discount": {
      "put": {
        "operationId": "InvoiceController_attachReferralDiscount",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachRefferalDiscount"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": ["Invoice"]
      }
    },
    "/api/invoices/{id}/atach-payment-guarantee": {
      "put": {
        "operationId": "InvoiceController_atachPayemntGuarantee",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachPaymentGuaranteeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        },
        "tags": ["Invoice"]
      }
    },
    "/api/invoices/{id}/add-treatment-plan": {
      "put": {
        "operationId": "InvoiceController_addTreatmentPlan",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTreatmentPlanDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": ["Invoice"]
      }
    },
    "/api/invoices/{id}/delete-treatment-plan": {
      "delete": {
        "operationId": "InvoiceController_deleteTreatmentPlan",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteTreatmentPlanDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": ["Invoice"]
      }
    },
    "/api/invoices/{id}/recalculate": {
      "put": {
        "operationId": "InvoiceController_recalculate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": ["Invoice"]
      }
    },
    "/api/inventory": {
      "get": {
        "operationId": "InventoryController_findAll",
        "parameters": [
          {
            "name": "warehouseId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "goodId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Inventory"]
      }
    },
    "/api/medicines": {
      "post": {
        "operationId": "MedicineController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMedicineDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Medicine"
                }
              }
            }
          }
        },
        "tags": ["Medicine"]
      },
      "get": {
        "operationId": "MedicineController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicinePaginatedResopnse"
                }
              }
            }
          }
        },
        "tags": ["Medicine"]
      }
    },
    "/api/medicines/{id}": {
      "get": {
        "operationId": "MedicineController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Medicine"
                }
              }
            }
          }
        },
        "tags": ["Medicine"]
      },
      "put": {
        "operationId": "MedicineController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMedicineDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateMedicineDto"
                }
              }
            }
          }
        },
        "tags": ["Medicine"]
      },
      "delete": {
        "operationId": "MedicineController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Medicine"]
      }
    },
    "/api/prescriptions": {
      "post": {
        "operationId": "PrescriptionController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePrescriptionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prescription"
                }
              }
            }
          }
        },
        "tags": ["Prescription"]
      },
      "get": {
        "operationId": "PrescriptionController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "patientId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "doctorId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "medicineIds",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrescriptionPaginatedResopnse"
                }
              }
            }
          }
        },
        "tags": ["Prescription"]
      }
    },
    "/api/prescriptions/{id}": {
      "get": {
        "operationId": "PrescriptionController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prescription"
                }
              }
            }
          }
        },
        "tags": ["Prescription"]
      },
      "put": {
        "operationId": "PrescriptionController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePrescriptionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": ["Prescription"]
      },
      "delete": {
        "operationId": "PrescriptionController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Prescription"]
      }
    },
    "/api/pros-cons": {
      "post": {
        "operationId": "ProsAndConsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProsAndConsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProsAndConsEntity"
                }
              }
            }
          }
        },
        "tags": ["ProsAndCons"]
      },
      "get": {
        "operationId": "ProsAndConsController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter.relatedEntity",
            "required": false,
            "in": "query",
            "description": "Filter by relatedEntity using operators like $eq, $gte, etc.",
            "schema": {
              "example": "$eq:doctor",
              "type": "string"
            }
          },
          {
            "name": "filter.type",
            "required": false,
            "in": "query",
            "description": "Filter by type using operators like $eq, $gte, etc.",
            "schema": {
              "example": "$eq:positive",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "example": ["createdAt:ASC", "updatedAt:ASC"],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginateProsAndConsResponseDto"
                }
              }
            }
          }
        },
        "tags": ["ProsAndCons"]
      }
    },
    "/api/pros-cons/{id}": {
      "get": {
        "operationId": "ProsAndConsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProsAndConsEntity"
                }
              }
            }
          }
        },
        "tags": ["ProsAndCons"]
      },
      "put": {
        "operationId": "ProsAndConsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProsAndConsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["ProsAndCons"]
      },
      "delete": {
        "operationId": "ProsAndConsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["ProsAndCons"]
      }
    },
    "/api/surveys/rate-patient": {
      "post": {
        "operationId": "SurveyController_ratePatient",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RatePatientDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyEntity"
                }
              }
            }
          }
        },
        "tags": ["Survey"]
      }
    },
    "/api/surveys/rate-doctor": {
      "post": {
        "operationId": "SurveyController_rateDoctor",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RateDoctorDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyEntity"
                }
              }
            }
          }
        },
        "tags": ["Survey"]
      }
    },
    "/api/surveys/most-common-pros-cons": {
      "get": {
        "operationId": "SurveyController_getMostCommonProsCons",
        "parameters": [
          {
            "name": "targetEntity",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["doctor", "patient", "personnel"]
            }
          },
          {
            "name": "targetEntityId",
            "required": true,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Survey"]
      }
    },
    "/api/gift-codes": {
      "post": {
        "operationId": "GiftCodeController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGiftCodeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GiftCodeEntity"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GiftCodeEntity"
                }
              }
            }
          }
        },
        "tags": ["GiftCode"]
      },
      "get": {
        "operationId": "GiftCodeController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter.type",
            "required": false,
            "in": "query",
            "description": "Filter by type using operators like $eq, $gte, etc.",
            "schema": {
              "example": "$eq:discount",
              "type": "string"
            }
          },
          {
            "name": "filter.enabled",
            "required": false,
            "in": "query",
            "description": "Filter by enabled using operators like $eq, $gte, etc.",
            "schema": {
              "enum": ["1", "0"],
              "type": "string"
            }
          },
          {
            "name": "filter.usedBy.id",
            "required": false,
            "in": "query",
            "description": "Filter by usedBy.id using operators like $eq, $gte, etc.",
            "schema": {
              "example": "$eq:253c4aa3-1363-488b-a50d-90cea849cd22",
              "type": "string"
            }
          },
          {
            "name": "filter.generationDate",
            "required": false,
            "in": "query",
            "description": "Filter by generationDate using operators like $eq, $gte, etc.",
            "schema": {
              "example": "$gte:2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "filter.expirationDate",
            "required": false,
            "in": "query",
            "description": "Filter by expirationDate using operators like $eq, $gte, etc.",
            "schema": {
              "example": "$lte:2024-12-31",
              "type": "string"
            }
          },
          {
            "name": "filter.usedAt",
            "required": false,
            "in": "query",
            "description": "Filter by usedAt using operators like $eq, $gte, etc.",
            "schema": {
              "example": "$gte:2024-12-31",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "example": [
                "createdAt:ASC",
                "updatedAt:ASC",
                "generationDate:DESC",
                "expirationDate:ASC"
              ],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedGiftCodeResponse"
                }
              }
            }
          }
        },
        "tags": ["GiftCode"]
      }
    },
    "/api/gift-codes/mine": {
      "get": {
        "operationId": "GiftCodeController_findMine",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter.type",
            "required": false,
            "in": "query",
            "description": "Filter by type using operators like $eq, $gte, etc.",
            "schema": {
              "example": "$eq:discount",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "example": ["createdAt:ASC", "usedAt:DESC"],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedGiftCodeResponse"
                }
              }
            }
          }
        },
        "tags": ["GiftCode"]
      }
    },
    "/api/gift-codes/{id}": {
      "get": {
        "operationId": "GiftCodeController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GiftCodeEntity"
                }
              }
            }
          }
        },
        "tags": ["GiftCode"]
      }
    },
    "/api/gift-codes/{id}/disable": {
      "put": {
        "operationId": "GiftCodeController_disable",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GiftCodeEntity"
                }
              }
            }
          }
        },
        "tags": ["GiftCode"]
      }
    },
    "/api/gift-codes/exchange/discount": {
      "post": {
        "operationId": "GiftCodeController_exchangeDiscount",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExchangeGiftCodeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["GiftCode"]
      }
    },
    "/api/gift-codes/exchange/credit": {
      "post": {
        "operationId": "GiftCodeController_exchangeCredit",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExchangeGiftCodeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["GiftCode"]
      }
    },
    "/api/gift-codes/exchange/score": {
      "post": {
        "operationId": "GiftCodeController_exchangeScore",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExchangeGiftCodeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["GiftCode"]
      }
    },
    "/api/gift-codes/{id}/disable/recent": {
      "put": {
        "operationId": "GiftCodeController_disableRecent",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GiftCodeEntity"
                }
              }
            }
          }
        },
        "tags": ["GiftCode"]
      }
    },
    "/api/gift-codes/admin/exchange/discount": {
      "post": {
        "operationId": "GiftCodeController_adminExchangeDiscount",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminExchangeGiftCodeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["GiftCode"]
      }
    },
    "/api/gift-codes/admin/exchange/credit": {
      "post": {
        "operationId": "GiftCodeController_adminExchangeCredit",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminExchangeGiftCodeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["GiftCode"]
      }
    },
    "/api/gift-codes/admin/exchange/score": {
      "post": {
        "operationId": "GiftCodeController_adminExchangeScore",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminExchangeGiftCodeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["GiftCode"]
      }
    },
    "/api/paid-invoices": {
      "get": {
        "operationId": "PaidInvoiceController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "invoiceId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "walletId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "patientId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "isUsed",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["PaidInvoice"]
      }
    },
    "/api/paid-invoices/mine": {
      "get": {
        "operationId": "PaidInvoiceController_findMine",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "invoiceId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "walletId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "patientId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "isUsed",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["PaidInvoice"]
      }
    },
    "/api/paid-invoices/{id}": {
      "get": {
        "operationId": "PaidInvoiceController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaidInvoice"
                }
              }
            }
          }
        },
        "tags": ["PaidInvoice"]
      }
    },
    "/api/paid-invoices/{id}/admin": {
      "get": {
        "operationId": "PaidInvoiceController_findOneByAdmin",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaidInvoice"
                }
              }
            }
          }
        },
        "tags": ["PaidInvoice"]
      }
    },
    "/api/paid-treatment-plans": {
      "get": {
        "operationId": "PaidTreatmentPlanController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "treatmentPlanId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "walletId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "patientId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "invoiceItemId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "isUsed",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["PaidTreatmentPlan"]
      }
    },
    "/api/paid-treatment-plans/mine": {
      "get": {
        "operationId": "PaidTreatmentPlanController_findMine",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "treatmentPlanId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "walletId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "patientId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "invoiceItemId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "isUsed",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["PaidTreatmentPlan"]
      }
    },
    "/api/paid-treatment-plans/{id}": {
      "get": {
        "operationId": "PaidTreatmentPlanController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaidTreatmentPlan"
                }
              }
            }
          }
        },
        "tags": ["PaidTreatmentPlan"]
      }
    },
    "/api/paid-treatment-plans/{id}/admin": {
      "get": {
        "operationId": "PaidTreatmentPlanController_findOneByAdmin",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaidTreatmentPlan"
                }
              }
            }
          }
        },
        "tags": ["PaidTreatmentPlan"]
      }
    }
  },
  "info": {
    "title": "clinic reservation system api",
    "description": "",
    "version": "2.0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CreateWalletDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": ["userId"]
      },
      "PermissionCategory": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "translatedTitle": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "title",
          "translatedTitle",
          "permissions",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "Permission": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "translatedTitle": {
            "type": "string"
          },
          "guardName": {
            "type": "string"
          },
          "categoryName": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/PermissionCategory"
          },
          "categoryId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "title",
          "translatedTitle",
          "guardName",
          "categoryName",
          "category",
          "categoryId",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "Role": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "guardName": {
            "type": "string"
          },
          "expireDate": {
            "format": "date-time",
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "title",
          "guardName",
          "expireDate",
          "permissions",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "SmsEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "scheduleSms": {
            "format": "date-time",
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "deliveryStatus": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "text": {
            "type": "string"
          },
          "providerMessageId": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "scheduleSms",
          "phoneNumber",
          "status",
          "deliveryStatus",
          "user",
          "text",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "Widget": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "order": {
            "type": "number"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "link",
          "order",
          "description",
          "user",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "Address": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string"
          },
          "province": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "location": {
            "type": "object"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "country",
          "province",
          "city",
          "address",
          "location",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "File": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          },
          "relationType": {
            "type": "string"
          },
          "relatedEntity": {
            "type": "string"
          },
          "relatedId": {
            "type": "string"
          },
          "uploader": {
            "$ref": "#/components/schemas/User"
          },
          "uploaderId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "path",
          "title",
          "mimeType",
          "relationType",
          "relatedEntity",
          "relatedId",
          "uploader",
          "uploaderId",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "ReminderEntity": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "remindAt": {
            "format": "date-time",
            "type": "string"
          },
          "isSent": {
            "type": "boolean"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "text",
          "remindAt",
          "isSent",
          "user",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "Position": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "personnel": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Personnel"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "description",
          "personnel",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "LaboratoryOrderView": {
        "type": "object",
        "properties": {
          "laboratoryName": {
            "type": "string"
          },
          "patientName": {
            "type": "string"
          },
          "doctorName": {
            "type": "string"
          },
          "treatmentTitle": {
            "type": "string"
          },
          "englishtTreatmentTitle": {
            "type": "string"
          },
          "orderStatus": {
            "enum": [
              "PENDING",
              "ORDERED",
              "SENTBYCLINIC",
              "RECIVEDBYLAB",
              "INPROCCESS",
              "REORDERD",
              "MANUFATURED",
              "SENTBYLAB",
              "RECEIVED"
            ],
            "type": "string"
          },
          "orderDate": {
            "format": "date-time",
            "type": "string"
          },
          "orderNumber": {
            "type": "string"
          },
          "reciveByClinicDate": {
            "format": "date-time",
            "type": "string"
          },
          "dentNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DentName"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "laboratoryName",
          "patientName",
          "doctorName",
          "treatmentTitle",
          "englishtTreatmentTitle",
          "orderStatus",
          "orderDate",
          "orderNumber",
          "reciveByClinicDate",
          "dentNames",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "DentName": {
        "type": "object",
        "properties": {
          "rowNumber": {
            "type": "number"
          },
          "permanentUniversal": {
            "type": "string"
          },
          "primaryUniversal": {
            "type": "string"
          },
          "altPrimaryUniversal": {
            "type": "string"
          },
          "permanentFDI": {
            "type": "string"
          },
          "primaryFDI": {
            "type": "string"
          },
          "permanentPalmer": {
            "type": "string"
          },
          "primaryPalmer": {
            "type": "string"
          },
          "treatmentPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TreatmentPlanEntity"
            }
          },
          "laboratoryOrderViews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LaboratoryOrderView"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "rowNumber",
          "permanentUniversal",
          "primaryUniversal",
          "altPrimaryUniversal",
          "permanentFDI",
          "primaryFDI",
          "permanentPalmer",
          "primaryPalmer",
          "treatmentPlans",
          "laboratoryOrderViews",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "DoctorTreatmentPlan": {
        "type": "object",
        "properties": {
          "doctor": {
            "$ref": "#/components/schemas/DoctorEntity"
          },
          "doctorId": {
            "type": "string"
          },
          "treatmentCategory": {
            "$ref": "#/components/schemas/TreatmentCategoryEntity"
          },
          "treatmentCategoryId": {
            "type": "string"
          },
          "requiredTime": {
            "type": "string"
          },
          "constantFee": {
            "type": "number"
          },
          "feePercent": {
            "type": "number"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "doctor",
          "doctorId",
          "treatmentCategory",
          "treatmentCategoryId",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "InsuranceCategoryEntity": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string"
          },
          "planName": {
            "type": "string"
          },
          "insuranceType": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "companyName",
          "planName",
          "insuranceType",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "Price": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number"
          },
          "supportPercentage": {
            "type": "number"
          },
          "supportAmount": {
            "type": "number"
          },
          "insuranceCategory": {
            "$ref": "#/components/schemas/InsuranceCategoryEntity"
          },
          "insuranceCategoryId": {
            "type": "string"
          },
          "treatmentCategory": {
            "$ref": "#/components/schemas/TreatmentCategoryEntity"
          },
          "treatmentCategoryId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "price",
          "supportPercentage",
          "supportAmount",
          "insuranceCategory",
          "insuranceCategoryId",
          "treatmentCategory",
          "treatmentCategoryId",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "TreatmentCategoryEntity": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "persianName": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "needsLab": {
            "type": "boolean"
          },
          "isUnforeseen": {
            "type": "boolean"
          },
          "parent": {
            "$ref": "#/components/schemas/TreatmentCategoryEntity"
          },
          "parentId": {
            "type": "string"
          },
          "childs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TreatmentCategoryEntity"
            }
          },
          "childsCount": {
            "type": "number"
          },
          "treatmentPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DoctorTreatmentPlan"
            }
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Price"
            }
          },
          "order": {
            "type": "number"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "persianName",
          "code",
          "description",
          "needsLab",
          "isUnforeseen",
          "parent",
          "parentId",
          "childs",
          "childsCount",
          "treatmentPlans",
          "prices",
          "order",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "MedicalInfo": {
        "type": "object",
        "properties": {
          "specialDiseases": {
            "type": "string"
          },
          "allergyBackground": {
            "type": "string"
          },
          "medications": {
            "type": "string"
          },
          "surgeryHistory": {
            "type": "string"
          },
          "communicableDiseases": {
            "type": "string"
          },
          "drugSensitivity": {
            "type": "string"
          },
          "gender": {
            "enum": ["Male", "Female"],
            "type": "string"
          },
          "isPregnant": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "specialDiseases",
          "allergyBackground",
          "medications",
          "surgeryHistory",
          "communicableDiseases",
          "drugSensitivity",
          "gender",
          "isPregnant",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "DentalInfo": {
        "type": "object",
        "properties": {
          "visitReason": {
            "type": "string"
          },
          "oralHygieneHabits": {
            "type": "string"
          },
          "toothSensitivity": {
            "enum": ["Cold", "Hot", "Sweet", "None"],
            "type": "string"
          },
          "lastVisitDate": {
            "format": "date-time",
            "type": "string"
          },
          "lastTreatmentType": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "visitReason",
          "oralHygieneHabits",
          "toothSensitivity",
          "lastVisitDate",
          "lastTreatmentType",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "InsuranceInfo": {
        "type": "object",
        "properties": {
          "insuranceNumber": {
            "type": "string"
          },
          "expirationDate": {
            "format": "date-time",
            "type": "string"
          },
          "dentalCoverage": {
            "type": "boolean"
          },
          "maxSupport": {
            "type": "number"
          },
          "insuranceCategory": {
            "$ref": "#/components/schemas/InsuranceCategoryEntity"
          },
          "insuranceCategoryId": {
            "type": "string"
          },
          "patient": {
            "$ref": "#/components/schemas/Patient"
          },
          "patientId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "insuranceNumber",
          "expirationDate",
          "dentalCoverage",
          "maxSupport",
          "insuranceCategory",
          "insuranceCategoryId",
          "patient",
          "patientId",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "AdditionalInfo": {
        "type": "object",
        "properties": {
          "patient": {
            "$ref": "#/components/schemas/Patient"
          },
          "stressLevel": {
            "enum": ["Low", "Medium", "High"],
            "type": "string"
          },
          "specialRequests": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "patient",
          "stressLevel",
          "specialRequests",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "Medicine": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "description",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "Prescription": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "patient": {
            "$ref": "#/components/schemas/Patient"
          },
          "patientId": {
            "type": "string"
          },
          "doctor": {
            "$ref": "#/components/schemas/DoctorEntity"
          },
          "doctorId": {
            "type": "string"
          },
          "medicines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Medicine"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "description",
          "patient",
          "patientId",
          "doctor",
          "doctorId",
          "medicines",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "UnitEquipment": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "unit": {
            "$ref": "#/components/schemas/Unit"
          },
          "unitId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "quantity",
          "unit",
          "unitId",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "Section": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "manager": {
            "$ref": "#/components/schemas/Personnel"
          },
          "managerId": {
            "type": "string"
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Unit"
            }
          },
          "doctors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DoctorEntity"
            }
          },
          "personnels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Personnel"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "manager",
          "managerId",
          "units",
          "doctors",
          "personnels",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "Unit": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "unitEquipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnitEquipment"
            }
          },
          "appointments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Appointment"
            }
          },
          "section": {
            "$ref": "#/components/schemas/Section"
          },
          "sectionId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "name",
          "unitEquipments",
          "appointments",
          "section",
          "sectionId",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "Appointment": {
        "type": "object",
        "properties": {
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "startTime": {
            "format": "date-time",
            "type": "string"
          },
          "endTime": {
            "format": "date-time",
            "type": "string"
          },
          "patient": {
            "$ref": "#/components/schemas/Patient"
          },
          "patientId": {
            "type": "string"
          },
          "doctor": {
            "$ref": "#/components/schemas/DoctorEntity"
          },
          "doctorId": {
            "type": "string"
          },
          "unit": {
            "$ref": "#/components/schemas/Unit"
          },
          "unitId": {
            "type": "string"
          },
          "assistant": {
            "$ref": "#/components/schemas/Personnel"
          },
          "assistantId": {
            "type": "string"
          },
          "treatmentPlan": {
            "$ref": "#/components/schemas/TreatmentPlanEntity"
          },
          "treatmentPlanId": {
            "type": "string"
          },
          "status": {
            "enum": ["WAITING", "ACCEPTED", "VISIT", "CANCELED", "DELAYED", "EMERGENCY"],
            "type": "string"
          },
          "guestPatientFirstName": {
            "type": "string"
          },
          "guestPatientLastName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "date",
          "startTime",
          "endTime",
          "patient",
          "patientId",
          "doctor",
          "doctorId",
          "unit",
          "unitId",
          "assistant",
          "assistantId",
          "treatmentPlan",
          "treatmentPlanId",
          "status",
          "guestPatientFirstName",
          "guestPatientLastName",
          "description",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "ReferralDiscount": {
        "type": "object",
        "properties": {
          "patient": {
            "$ref": "#/components/schemas/Patient"
          },
          "patientId": {
            "type": "string"
          },
          "personnel": {
            "$ref": "#/components/schemas/Personnel"
          },
          "personnelId": {
            "type": "string"
          },
          "treatmentplan": {
            "$ref": "#/components/schemas/TreatmentPlanEntity"
          },
          "treatmentplanId": {
            "type": "string"
          },
          "percentageAmount": {
            "type": "number"
          },
          "fixedAmount": {
            "type": "number"
          },
          "maxDiscountAmount": {
            "type": "number"
          },
          "method": {
            "enum": ["FIXED", "PERCENTAGE"],
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "enum": ["waiting", "confirm", "cancel"],
            "type": "string"
          },
          "isUsed": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "patient",
          "patientId",
          "personnel",
          "personnelId",
          "treatmentplan",
          "treatmentplanId",
          "percentageAmount",
          "fixedAmount",
          "maxDiscountAmount",
          "method",
          "description",
          "status",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "Wallet": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "number"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "userId": {
            "type": "string"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WalletTransaction"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "balance",
          "user",
          "userId",
          "transactions",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "WalletTransaction": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "fromWallet": {
            "$ref": "#/components/schemas/Wallet"
          },
          "fromWalletId": {
            "type": "string"
          },
          "toWallet": {
            "$ref": "#/components/schemas/Wallet"
          },
          "toWalletId": {
            "type": "string"
          },
          "type": {
            "enum": ["deposit", "withdrawal", "transfer", "loan"],
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "enum": ["pending", "completed", "failed"],
            "type": "string"
          },
          "paidTreatmentPlan": {
            "$ref": "#/components/schemas/PaidTreatmentPlan"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "amount",
          "fromWallet",
          "fromWalletId",
          "toWallet",
          "toWalletId",
          "type",
          "description",
          "status",
          "paidTreatmentPlan",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "PaidTreatmentPlan": {
        "type": "object",
        "properties": {
          "walletTransaction": {
            "$ref": "#/components/schemas/WalletTransaction"
          },
          "walletTransactionId": {
            "type": "string"
          },
          "invoiceItem": {
            "$ref": "#/components/schemas/InvoiceItem"
          },
          "invoiceItemId": {
            "type": "string"
          },
          "paidAt": {
            "format": "date-time",
            "type": "string"
          },
          "patient": {
            "$ref": "#/components/schemas/Patient"
          },
          "patientId": {
            "type": "string"
          },
          "wallet": {
            "$ref": "#/components/schemas/Wallet"
          },
          "walletId": {
            "type": "string"
          },
          "treatmentPlan": {
            "$ref": "#/components/schemas/TreatmentPlanEntity"
          },
          "treatmentPlanId": {
            "type": "string"
          },
          "isUsed": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "walletTransaction",
          "walletTransactionId",
          "invoiceItem",
          "invoiceItemId",
          "paidAt",
          "patient",
          "patientId",
          "wallet",
          "walletId",
          "treatmentPlan",
          "treatmentPlanId",
          "isUsed",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "InvoiceItem": {
        "type": "object",
        "properties": {
          "invoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "invoiceId": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "payablePrice": {
            "type": "number"
          },
          "priceOutsideTheTariff": {
            "type": "number"
          },
          "priceWithFixedAmountCoverage": {
            "type": "number"
          },
          "priceWithPercentageCoverage": {
            "type": "number"
          },
          "supportAmount": {
            "type": "number"
          },
          "supportPercentage": {
            "type": "number"
          },
          "supportPercentageAmount": {
            "type": "number"
          },
          "discount": {
            "type": "number"
          },
          "treatmentTitle": {
            "type": "string"
          },
          "treatmentPlan": {
            "$ref": "#/components/schemas/TreatmentPlanEntity"
          },
          "treatmentPlanId": {
            "type": "string"
          },
          "treatmentCategory": {
            "$ref": "#/components/schemas/TreatmentCategoryEntity"
          },
          "treatmentCategoryId": {
            "type": "string"
          },
          "showInInvoice": {
            "type": "boolean"
          },
          "ignoreInTotal": {
            "type": "boolean"
          },
          "paidTreatmentPlan": {
            "$ref": "#/components/schemas/PaidTreatmentPlan"
          },
          "isPaid": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "invoice",
          "invoiceId",
          "price",
          "payablePrice",
          "priceWithFixedAmountCoverage",
          "priceWithPercentageCoverage",
          "supportAmount",
          "supportPercentage",
          "supportPercentageAmount",
          "discount",
          "treatmentTitle",
          "treatmentPlan",
          "treatmentPlanId",
          "treatmentCategory",
          "treatmentCategoryId",
          "showInInvoice",
          "ignoreInTotal",
          "paidTreatmentPlan",
          "isPaid",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "PaymentGuarantee": {
        "type": "object",
        "properties": {
          "isPremium": {
            "type": "boolean"
          },
          "treatmentPlanId": {
            "type": "string"
          },
          "treatmentPlan": {
            "$ref": "#/components/schemas/TreatmentPlanEntity"
          },
          "guarantorId": {
            "type": "string"
          },
          "guarantor": {
            "$ref": "#/components/schemas/Personnel"
          },
          "patientId": {
            "type": "string"
          },
          "patient": {
            "$ref": "#/components/schemas/Patient"
          },
          "status": {
            "enum": ["WAITING", "CONFIRMED", "CANCELED"],
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isUsed": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "isPremium",
          "treatmentPlanId",
          "treatmentPlan",
          "guarantorId",
          "guarantor",
          "patientId",
          "patient",
          "status",
          "description",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "Discount": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "startDate": {
            "format": "date-time",
            "type": "string"
          },
          "endDate": {
            "format": "date-time",
            "type": "string"
          },
          "isExpired": {
            "type": "boolean"
          },
          "isGeneral": {
            "type": "boolean"
          },
          "fixedAmount": {
            "type": "number"
          },
          "percentage": {
            "type": "number"
          },
          "method": {
            "enum": ["FIXED", "PERCENTAGE"],
            "type": "string"
          },
          "applyToAllCategories": {
            "type": "boolean"
          },
          "treatmentCategory": {
            "$ref": "#/components/schemas/TreatmentCategoryEntity"
          },
          "treatmentCategoryId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "provider",
          "startDate",
          "endDate",
          "isExpired",
          "isGeneral",
          "fixedAmount",
          "percentage",
          "method",
          "applyToAllCategories",
          "treatmentCategory",
          "treatmentCategoryId",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "PaidInvoice": {
        "type": "object",
        "properties": {
          "walletTransaction": {
            "$ref": "#/components/schemas/WalletTransaction"
          },
          "walletTransactionId": {
            "type": "string"
          },
          "invoice": {
            "$ref": "#/components/schemas/Invoice"
          },
          "invoiceId": {
            "type": "string"
          },
          "paidAt": {
            "format": "date-time",
            "type": "string"
          },
          "patient": {
            "$ref": "#/components/schemas/Patient"
          },
          "patientId": {
            "type": "string"
          },
          "wallet": {
            "$ref": "#/components/schemas/Wallet"
          },
          "walletId": {
            "type": "string"
          },
          "isUsed": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "walletTransaction",
          "walletTransactionId",
          "invoice",
          "invoiceId",
          "paidAt",
          "patient",
          "patientId",
          "wallet",
          "walletId",
          "isUsed",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceItem"
            }
          },
          "date": {
            "type": "string"
          },
          "totalPriceWithoutSupport": {
            "type": "number"
          },
          "totalPercentageSupport": {
            "type": "number"
          },
          "totalFixedAmountSupport": {
            "type": "number"
          },
          "totalDiscountAmount": {
            "type": "number"
          },
          "totalPayable": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "referralDiscount": {
            "$ref": "#/components/schemas/ReferralDiscount"
          },
          "paymentGuarantee": {
            "$ref": "#/components/schemas/PaymentGuarantee"
          },
          "insuranceInfo": {
            "$ref": "#/components/schemas/InsuranceInfo"
          },
          "insuranceInfoId": {
            "type": "string"
          },
          "patient": {
            "$ref": "#/components/schemas/Patient"
          },
          "patientId": {
            "type": "string"
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Discount"
            }
          },
          "number": {
            "type": "string"
          },
          "paidInvoice": {
            "$ref": "#/components/schemas/PaidInvoice"
          },
          "totalInsuranceSupport": {
            "type": "number"
          },
          "isPaid": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "items",
          "date",
          "totalPriceWithoutSupport",
          "totalPercentageSupport",
          "totalFixedAmountSupport",
          "totalDiscountAmount",
          "totalPayable",
          "total",
          "referralDiscount",
          "paymentGuarantee",
          "insuranceInfo",
          "insuranceInfoId",
          "patient",
          "patientId",
          "discounts",
          "number",
          "paidInvoice",
          "totalInsuranceSupport",
          "isPaid",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "Patient": {
        "type": "object",
        "properties": {
          "documentNumber": {
            "type": "string"
          },
          "ratingCount": {
            "type": "number"
          },
          "ratingSum": {
            "type": "number"
          },
          "averageSurveyRate": {
            "type": "number"
          },
          "medicalInfo": {
            "$ref": "#/components/schemas/MedicalInfo"
          },
          "dentalInfo": {
            "$ref": "#/components/schemas/DentalInfo"
          },
          "insuranceInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InsuranceInfo"
            }
          },
          "additionalInfo": {
            "$ref": "#/components/schemas/AdditionalInfo"
          },
          "userInfo": {
            "$ref": "#/components/schemas/User"
          },
          "userInfoId": {
            "type": "string"
          },
          "perscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Prescription"
            }
          },
          "appointments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Appointment"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "referralDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferralDiscount"
            }
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invoice"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "documentNumber",
          "ratingCount",
          "ratingSum",
          "averageSurveyRate",
          "medicalInfo",
          "dentalInfo",
          "insuranceInfo",
          "additionalInfo",
          "userInfo",
          "userInfoId",
          "perscriptions",
          "appointments",
          "documents",
          "referralDiscounts",
          "invoices",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "ProsAndConsEntity": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "type": {
            "enum": ["Positive", "Negative"],
            "type": "string"
          },
          "relatedEntity": {
            "enum": ["doctor", "patient", "personnel"],
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "type",
          "relatedEntity",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "SurveyEntity": {
        "type": "object",
        "properties": {
          "targetEntity": {
            "enum": ["doctor", "patient", "personnel"],
            "type": "string"
          },
          "targetEntityId": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "creatorId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "rate": {
            "type": "number"
          },
          "prosAndCons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProsAndConsEntity"
            }
          },
          "treatment": {
            "$ref": "#/components/schemas/TreatmentEntity"
          },
          "treatmentId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "targetEntity",
          "targetEntityId",
          "creator",
          "creatorId",
          "description",
          "rate",
          "prosAndCons",
          "treatment",
          "treatmentId",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "TreatmentEntity": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "treatmentPrice": {
            "type": "string"
          },
          "payment": {
            "type": "string"
          },
          "invoiceId": {
            "type": "string"
          },
          "fingerprint": {
            "type": "string"
          },
          "verification_video": {
            "type": "string"
          },
          "status": {
            "enum": ["inprogress", "completed"],
            "type": "string"
          },
          "treatmentPlan": {
            "$ref": "#/components/schemas/TreatmentPlanEntity"
          },
          "childs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TreatmentEntity"
            }
          },
          "parent": {
            "$ref": "#/components/schemas/TreatmentEntity"
          },
          "parentId": {
            "type": "string"
          },
          "doctor": {
            "$ref": "#/components/schemas/DoctorEntity"
          },
          "doctorId": {
            "type": "string"
          },
          "assistant": {
            "$ref": "#/components/schemas/Personnel"
          },
          "assistantId": {
            "type": "string"
          },
          "surveys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyEntity"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "description",
          "treatmentPrice",
          "payment",
          "invoiceId",
          "fingerprint",
          "verification_video",
          "status",
          "treatmentPlan",
          "childs",
          "parent",
          "parentId",
          "doctor",
          "doctorId",
          "assistant",
          "assistantId",
          "surveys",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "TreatmentPlanEntity": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "dentName": {
            "$ref": "#/components/schemas/DentName"
          },
          "dentNameId": {
            "type": "string"
          },
          "assistant": {
            "$ref": "#/components/schemas/Personnel"
          },
          "assistantId": {
            "type": "string"
          },
          "treatmentPrice": {
            "type": "string"
          },
          "paymentMethod": {
            "type": "string"
          },
          "isSelected": {
            "type": "boolean"
          },
          "discount": {
            "type": "number"
          },
          "category": {
            "$ref": "#/components/schemas/TreatmentCategoryEntity"
          },
          "categoryId": {
            "type": "string"
          },
          "doctor": {
            "$ref": "#/components/schemas/DoctorEntity"
          },
          "doctorId": {
            "type": "string"
          },
          "patient": {
            "$ref": "#/components/schemas/Patient"
          },
          "patientId": {
            "type": "string"
          },
          "isHead": {
            "type": "boolean"
          },
          "head": {
            "$ref": "#/components/schemas/TreatmentPlanEntity"
          },
          "headId": {
            "type": "string"
          },
          "subs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TreatmentPlanEntity"
            }
          },
          "treatment": {
            "$ref": "#/components/schemas/TreatmentEntity"
          },
          "order": {
            "type": "number"
          },
          "priceInfo": {
            "$ref": "#/components/schemas/Price"
          },
          "paidTreatmentPlan": {
            "$ref": "#/components/schemas/PaidTreatmentPlan"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "description",
          "dentName",
          "dentNameId",
          "assistant",
          "assistantId",
          "treatmentPrice",
          "paymentMethod",
          "isSelected",
          "discount",
          "category",
          "categoryId",
          "doctor",
          "doctorId",
          "patient",
          "patientId",
          "isHead",
          "head",
          "headId",
          "subs",
          "treatment",
          "order",
          "priceInfo",
          "paidTreatmentPlan",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "DoctorEntity": {
        "type": "object",
        "properties": {
          "medicalCouncilNumber": {
            "type": "string"
          },
          "ratingCount": {
            "type": "number"
          },
          "ratingSum": {
            "type": "number"
          },
          "averageSurveyRate": {
            "type": "number"
          },
          "personnelInfo": {
            "$ref": "#/components/schemas/Personnel"
          },
          "treatmentPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TreatmentPlanEntity"
            }
          },
          "treatments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TreatmentEntity"
            }
          },
          "appointments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Appointment"
            }
          },
          "doctorTreatmentPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DoctorTreatmentPlan"
            }
          },
          "section": {
            "$ref": "#/components/schemas/Section"
          },
          "sectionId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "medicalCouncilNumber",
          "ratingCount",
          "ratingSum",
          "averageSurveyRate",
          "personnelInfo",
          "treatmentPlans",
          "treatments",
          "appointments",
          "doctorTreatmentPlans",
          "section",
          "sectionId",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "IrregularScheduleEntity": {
        "type": "object",
        "properties": {
          "personnel": {
            "$ref": "#/components/schemas/Personnel"
          },
          "workDate": {
            "format": "date-time",
            "type": "string"
          },
          "startTime": {
            "format": "date-time",
            "type": "string"
          },
          "endTime": {
            "format": "date-time",
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "personnel",
          "workDate",
          "startTime",
          "endTime",
          "createdAt",
          "updatedAt",
          "id",
          "deletedAt",
          "creatorId"
        ]
      },
      "AttendanceEntity": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "enterTime": {
            "type": "string"
          },
          "exitTime": {
            "type": "string"
          },
          "personnelId": {
            "type": "string"
          },
          "personnel": {
            "$ref": "#/components/schemas/Personnel"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "date",
          "enterTime",
          "exitTime",
          "personnelId",
          "personnel",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "UnitConsumableGoods": {
        "type": "object",
        "properties": {
          "virtualQuantity": {
            "type": "number"
          },
          "automaticOrderQuantity": {
            "type": "number"
          },
          "unitId": {
            "type": "string"
          },
          "unit": {
            "$ref": "#/components/schemas/Unit"
          },
          "name": {
            "type": "string"
          },
          "latinName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "orderPoint": {
            "type": "number"
          },
          "barcode": {
            "type": "string"
          },
          "categoryIdentifier": {
            "type": "string"
          },
          "currentQuantity": {
            "type": "number"
          },
          "initialQuantity": {
            "type": "number"
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnitOrdersEntity"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "unitId",
          "unit",
          "name",
          "latinName",
          "description",
          "code",
          "orderPoint",
          "barcode",
          "categoryIdentifier",
          "currentQuantity",
          "initialQuantity",
          "orders",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "UnitOrdersEntity": {
        "type": "object",
        "properties": {
          "unitId": {
            "type": "string"
          },
          "unit": {
            "$ref": "#/components/schemas/Unit"
          },
          "quantity": {
            "type": "number"
          },
          "receiveDate": {
            "format": "date-time",
            "type": "string"
          },
          "receiverId": {
            "type": "string"
          },
          "receiver": {
            "$ref": "#/components/schemas/Personnel"
          },
          "consumableGoodId": {
            "type": "string"
          },
          "consumableGood": {
            "$ref": "#/components/schemas/UnitConsumableGoods"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "unitId",
          "unit",
          "quantity",
          "consumableGoodId",
          "consumableGood",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "Personnel": {
        "type": "object",
        "properties": {
          "position": {
            "$ref": "#/components/schemas/Position"
          },
          "salary": {
            "type": "number"
          },
          "resume": {
            "type": "string"
          },
          "userInfo": {
            "$ref": "#/components/schemas/User"
          },
          "personnelNumber": {
            "type": "string"
          },
          "doctor": {
            "$ref": "#/components/schemas/DoctorEntity"
          },
          "irregularSchedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IrregularScheduleEntity"
            }
          },
          "attendances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttendanceEntity"
            }
          },
          "appointments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Appointment"
            }
          },
          "managedSections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Section"
            }
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Section"
            }
          },
          "receivedOrders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnitOrdersEntity"
            }
          },
          "issuedReferralDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferralDiscount"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "position",
          "salary",
          "resume",
          "userInfo",
          "personnelNumber",
          "doctor",
          "irregularSchedules",
          "attendances",
          "appointments",
          "managedSections",
          "sections",
          "receivedOrders",
          "issuedReferralDiscounts",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "TicketCategory": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ticket"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "description",
          "isActive",
          "tickets",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "Ticket": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          },
          "status": {
            "enum": ["open", "underReview", "answered", "closed"],
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "priority": {
            "enum": ["high", "medium", "low"],
            "type": "string"
          },
          "attachment": {
            "$ref": "#/components/schemas/File"
          },
          "attachmentId": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/TicketCategory"
          },
          "categoryId": {
            "type": "string"
          },
          "answeredAt": {
            "format": "date-time",
            "type": "string"
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TicketAnswer"
            }
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "subject",
          "status",
          "description",
          "priority",
          "attachment",
          "attachmentId",
          "category",
          "categoryId",
          "answeredAt",
          "answers",
          "creator",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "TicketAnswer": {
        "type": "object",
        "properties": {
          "answer": {
            "type": "string"
          },
          "attachment": {
            "$ref": "#/components/schemas/File"
          },
          "attachmentId": {
            "type": "string"
          },
          "ticket": {
            "$ref": "#/components/schemas/Ticket"
          },
          "ticketId": {
            "type": "string"
          },
          "sender": {
            "$ref": "#/components/schemas/User"
          },
          "senderId": {
            "type": "string"
          },
          "replyTo": {
            "$ref": "#/components/schemas/TicketAnswer"
          },
          "replyToId": {
            "type": "string"
          },
          "replies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TicketAnswer"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "answer",
          "attachment",
          "attachmentId",
          "ticket",
          "sender",
          "senderId",
          "replyTo",
          "replyToId",
          "replies",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "nationalCode": {
            "type": "string"
          },
          "birthDate": {
            "type": "string"
          },
          "fatherName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "homeNumber": {
            "type": "string"
          },
          "emergencyNumber": {
            "type": "string"
          },
          "isEmailVerified": {
            "type": "boolean"
          },
          "isPhoneVerified": {
            "type": "boolean"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          },
          "sms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SmsEntity"
            }
          },
          "widgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Widget"
            }
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/File"
            }
          },
          "avatar": {
            "type": "string"
          },
          "fingerprint": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          },
          "reminders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReminderEntity"
            }
          },
          "personnel": {
            "$ref": "#/components/schemas/Personnel"
          },
          "wallet": {
            "$ref": "#/components/schemas/Wallet"
          },
          "customerClubScore": {
            "type": "number"
          },
          "ticketAnswers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TicketAnswer"
            }
          },
          "oldDocumentNumber": {
            "type": "string"
          },
          "oldAdress": {
            "type": "string"
          },
          "workNumber": {
            "type": "string"
          },
          "oldDescription": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "userName",
          "password",
          "email",
          "firstName",
          "lastName",
          "nationalCode",
          "birthDate",
          "fatherName",
          "phoneNumber",
          "homeNumber",
          "emergencyNumber",
          "isEmailVerified",
          "isPhoneVerified",
          "permissions",
          "roles",
          "sms",
          "widgets",
          "address",
          "files",
          "avatar",
          "fingerprint",
          "signature",
          "reminders",
          "personnel",
          "wallet",
          "customerClubScore",
          "ticketAnswers",
          "oldDocumentNumber",
          "oldAdress",
          "workNumber",
          "oldDescription",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "SortByDto": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "example": "createdAt"
          },
          "direction": {
            "enum": ["ASC", "DESC"],
            "type": "string",
            "example": "DESC"
          }
        },
        "required": ["field", "direction"]
      },
      "PaginationMetaDto": {
        "type": "object",
        "properties": {
          "itemsPerPage": {
            "type": "number"
          },
          "totalItems": {
            "type": "number"
          },
          "currentPage": {
            "type": "number"
          },
          "totalPages": {
            "type": "number"
          },
          "sortBy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortByDto"
            }
          },
          "search": {
            "type": "string"
          },
          "filter": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "required": ["itemsPerPage"]
      },
      "PaginationLinksDto": {
        "type": "object",
        "properties": {
          "first": {
            "type": "string"
          },
          "previous": {
            "type": "string"
          },
          "current": {
            "type": "string"
          },
          "next": {
            "type": "string"
          },
          "last": {
            "type": "string"
          }
        },
        "required": ["current"]
      },
      "PaginatedWalletResponseDto": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Wallet"
            }
          }
        },
        "required": ["meta", "links", "items"]
      },
      "PaginatedTransactionResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WalletTransaction"
            }
          }
        },
        "required": ["meta", "links", "items"]
      },
      "WalletDetailsResponseDto": {
        "type": "object",
        "properties": {
          "wallet": {
            "$ref": "#/components/schemas/Wallet"
          },
          "transactions": {
            "$ref": "#/components/schemas/PaginatedTransactionResponse"
          }
        },
        "required": ["wallet", "transactions"]
      },
      "UserFundTransferDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "minimum": 1
          },
          "toWalletId": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          }
        },
        "required": ["amount", "toWalletId"]
      },
      "FundTransferDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "minimum": 1
          },
          "fromWalletId": {
            "type": "string",
            "format": "uuid"
          },
          "toWalletId": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          }
        },
        "required": ["amount", "fromWalletId", "toWalletId"]
      },
      "PayTreatmentPlanDto": {
        "type": "object",
        "properties": {
          "invoiceItemId": {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the invoice item to pay for",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        },
        "required": ["invoiceItemId"]
      },
      "PayTreatmentPlanByAdminDto": {
        "type": "object",
        "properties": {
          "invoiceItemId": {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the invoice item to pay for",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "patientId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": ["invoiceItemId", "patientId"]
      },
      "PayPreInvoice": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "string",
            "format": "uuid",
            "description": "The ID of the pre-invoice to pay for",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        },
        "required": ["invoiceId"]
      },
      "CreateTicketDto": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "maxLength": 100
          },
          "description": {
            "type": "string"
          },
          "priority": {
            "type": "string",
            "enum": ["high", "medium", "low"]
          },
          "categoryId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": ["subject", "description", "categoryId"]
      },
      "PaginatedTicketResponseDto": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ticket"
            }
          }
        },
        "required": ["meta", "links", "items"]
      },
      "TicketResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Ticket"
          }
        },
        "required": ["data"]
      },
      "CreateTicketAnswerDto": {
        "type": "object",
        "properties": {
          "answer": {
            "type": "string"
          },
          "ticketId": {
            "type": "string",
            "format": "uuid"
          },
          "replyTo": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": ["answer"]
      },
      "PaginatedTicketCategoryResponseDto": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TicketCategory"
            }
          }
        },
        "required": ["meta", "links", "items"]
      },
      "TicketCategoryResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TicketCategory"
          }
        },
        "required": ["data"]
      },
      "CreateTicketCategoryDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 100
          },
          "description": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "required": ["title"]
      },
      "UpdateTicketCategoryDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 100
          },
          "description": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "event": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "string"
          },
          "deliveryStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationDelivery"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "event",
          "message",
          "payload",
          "deliveryStatus",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "NotificationRoom": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notification"
            }
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "notifications",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "NotificationDelivery": {
        "type": "object",
        "properties": {
          "room": {
            "$ref": "#/components/schemas/NotificationRoom"
          },
          "notification": {
            "$ref": "#/components/schemas/Notification"
          },
          "status": {
            "type": "string",
            "enum": ["DELIVERED", "PENDING"]
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "room",
          "notification",
          "status",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "CreateReminderDto": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "remindAt": {
            "type": "string"
          }
        },
        "required": ["text", "remindAt"]
      },
      "UpdateReminderDto": {
        "type": "object",
        "properties": {}
      },
      "CreatePermissionDto": {
        "type": "object",
        "properties": {
          "accessLevel": {
            "enum": ["create", "read", "update", "delete", "recover"],
            "type": "string"
          },
          "categoryId": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "translatedTitle": {
            "type": "string"
          }
        },
        "required": ["accessLevel", "categoryId", "title", "translatedTitle"]
      },
      "GrantPermissionToUserDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "permissionIds": {
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": ["userId", "permissionIds"]
      },
      "UpdatePermissinDto": {
        "type": "object",
        "properties": {}
      },
      "CreateRoleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "guardName": {
            "type": "string"
          },
          "expireDate": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": ["name"]
      },
      "GrantToUserDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "roleId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": ["userId", "roleId"]
      },
      "GrantPermissionToRoleDto": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string",
            "format": "uuid"
          },
          "permissionIds": {
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": ["roleId", "permissionIds"]
      },
      "UpdateRoleDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "expireDate": {
            "format": "date-time",
            "type": "string"
          }
        }
      },
      "CreateWorkScheduleDto": {
        "type": "object",
        "properties": {
          "dayOfWeek": {
            "type": "string"
          },
          "startTime_1": {
            "type": "string"
          },
          "endTime_1": {
            "type": "string"
          },
          "startTime_2": {
            "type": "string"
          },
          "endTime_2": {
            "type": "string"
          },
          "personnelId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "dayOfWeek",
          "startTime_1",
          "endTime_1",
          "startTime_2",
          "endTime_2",
          "personnelId"
        ]
      },
      "WorkSchedule": {
        "type": "object",
        "properties": {
          "dayOfWeek": {
            "type": "string"
          },
          "startTime_1": {
            "format": "date-time",
            "type": "string"
          },
          "endTime_1": {
            "format": "date-time",
            "type": "string"
          },
          "startTime_2": {
            "format": "date-time",
            "type": "string"
          },
          "endTime_2": {
            "format": "date-time",
            "type": "string"
          },
          "personnelId": {
            "type": "string"
          },
          "personnel": {
            "$ref": "#/components/schemas/Personnel"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "dayOfWeek",
          "personnelId",
          "personnel",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "PaginatedWorkScheduleResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkSchedule"
            }
          }
        },
        "required": ["meta", "links", "data"]
      },
      "UpdateWorkScheduleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "dayOfWeek": {
            "type": "string"
          },
          "startTime_1": {
            "type": "string"
          },
          "endTime_1": {
            "type": "string"
          },
          "startTime_2": {
            "type": "string"
          },
          "endTime_2": {
            "type": "string"
          },
          "personnelId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": ["id", "startTime_1", "endTime_1", "startTime_2", "endTime_2"]
      },
      "LabOrderViewPaginatedResopnse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LaboratoryOrderView"
            }
          }
        },
        "required": ["meta", "links", "items"]
      },
      "PaginatedAttendanceResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttendanceEntity"
            }
          }
        },
        "required": ["meta", "links", "data"]
      },
      "CreateAttendanceDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "enterTime": {
            "type": "string"
          },
          "exitTime": {
            "type": "string"
          },
          "personnelId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": ["date", "enterTime", "exitTime", "personnelId"]
      },
      "UpdateAttendanceDto": {
        "type": "object",
        "properties": {}
      },
      "CreateSectionDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "managerId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": ["name", "managerId"]
      },
      "AttachPersonnelDto": {
        "type": "object",
        "properties": {
          "sectionId": {
            "type": "string",
            "format": "uuid"
          },
          "personnelIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": ["sectionId", "personnelIds"]
      },
      "DetachPersonnelDto": {
        "type": "object",
        "properties": {
          "sectionId": {
            "type": "string",
            "format": "uuid"
          },
          "personnelIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": ["sectionId", "personnelIds"]
      },
      "UpdateSectionDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "managerId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "PaginatedSectionResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Section"
            }
          }
        },
        "required": ["meta", "links", "data"]
      },
      "CreateReferralDiscountDto": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "string",
            "format": "uuid"
          },
          "personnelId": {
            "type": "string",
            "format": "uuid"
          },
          "treatmentplanId": {
            "type": "string",
            "format": "uuid"
          },
          "percentageAmount": {
            "type": "number",
            "minimum": 1,
            "maximum": 100
          },
          "fixedAmount": {
            "type": "number"
          },
          "maxDiscountAmount": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["waiting", "confirm", "cancel"]
          }
        },
        "required": ["patientId", "personnelId"]
      },
      "PaginatedReferralDiscountResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferralDiscount"
            }
          }
        },
        "required": ["meta", "links", "data"]
      },
      "UpdateReferralDiscountDto": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "string",
            "format": "uuid"
          },
          "personnelId": {
            "type": "string",
            "format": "uuid"
          },
          "treatmentplanId": {
            "type": "string",
            "format": "uuid"
          },
          "percentageAmount": {
            "type": "number",
            "minimum": 1,
            "maximum": 100
          },
          "fixedAmount": {
            "type": "number"
          },
          "maxDiscountAmount": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "enum": ["waiting", "confirm", "cancel"],
            "type": "string"
          },
          "method": {
            "enum": ["FIXED", "PERCENTAGE"],
            "type": "string"
          }
        },
        "required": ["method"]
      },
      "UpdateReferralDiscountStatusDto": {
        "type": "object",
        "properties": {
          "status": {
            "enum": ["waiting", "confirm", "cancel"],
            "type": "string",
            "description": "New status for the referral discount",
            "example": "confirm"
          }
        },
        "required": ["status"]
      },
      "CreatePaymentDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "minimum": 0
          },
          "paidAt": {
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "payer": {
            "type": "string"
          },
          "paymentMethod": {
            "type": "string"
          },
          "treatmentId": {
            "type": "string",
            "format": "uuid"
          },
          "payerPatientId": {
            "type": "string",
            "format": "uuid"
          },
          "recipientDoctorId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "amount",
          "paidAt",
          "description",
          "payer",
          "paymentMethod",
          "treatmentId",
          "payerPatientId",
          "recipientDoctorId"
        ]
      },
      "Payment": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "paidAt": {
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "payer": {
            "type": "string"
          },
          "recipient": {
            "type": "string"
          },
          "paymentMethod": {
            "type": "string"
          },
          "treatment": {
            "$ref": "#/components/schemas/TreatmentEntity"
          },
          "treatmentId": {
            "type": "string"
          },
          "payerPatient": {
            "$ref": "#/components/schemas/Patient"
          },
          "payerPatientId": {
            "type": "string"
          },
          "recipientDoctor": {
            "$ref": "#/components/schemas/DoctorEntity"
          },
          "recipientDoctorId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "amount",
          "paidAt",
          "description",
          "payer",
          "recipient",
          "paymentMethod",
          "treatment",
          "treatmentId",
          "payerPatient",
          "payerPatientId",
          "recipientDoctor",
          "recipientDoctorId",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "UpdatePaymentDto": {
        "type": "object",
        "properties": {}
      },
      "CreateBillPayableDto": {
        "type": "object",
        "properties": {
          "payableAmount": {
            "type": "number",
            "minimum": 0
          },
          "description": {
            "type": "string"
          },
          "debtor": {
            "type": "string"
          },
          "paymentMethod": {
            "type": "string"
          },
          "treatmentId": {
            "type": "string",
            "format": "uuid"
          },
          "deptorPatientId": {
            "type": "string",
            "format": "uuid"
          },
          "creditorDoctorId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "payableAmount",
          "description",
          "debtor",
          "paymentMethod",
          "treatmentId",
          "deptorPatientId",
          "creditorDoctorId"
        ]
      },
      "UpdateBillPayableDto": {
        "type": "object",
        "properties": {}
      },
      "CreatePaymentGuaranteeDto": {
        "type": "object",
        "properties": {
          "isPremium": {
            "type": "boolean"
          },
          "treatmentPlanId": {
            "type": "string",
            "format": "uuid"
          },
          "guarantorId": {
            "type": "string",
            "format": "uuid"
          },
          "patientId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": ["WAITING", "CONFIRMED", "CANCELED"]
          },
          "description": {
            "type": "string"
          }
        },
        "required": ["isPremium", "guarantorId", "patientId"]
      },
      "PaginatedPaymentGuaranteeResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentGuarantee"
            }
          }
        },
        "required": ["meta", "links", "data"]
      },
      "UpdatePaymentGuaranteeDto": {
        "type": "object",
        "properties": {
          "isPremium": {
            "type": "boolean"
          },
          "treatmentPlanId": {
            "type": "string",
            "format": "uuid"
          },
          "guarantorId": {
            "type": "string",
            "format": "uuid"
          },
          "patientId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": ["WAITING", "CONFIRMED", "CANCELED"]
          },
          "description": {
            "type": "string"
          }
        },
        "required": ["isPremium", "guarantorId", "patientId"]
      },
      "UpdatePaymentGuaranteeStatusDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["WAITING", "CONFIRMED", "CANCELED"]
          }
        },
        "required": ["status"]
      },
      "CreateInvoiceItemDto": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "string",
            "format": "uuid"
          },
          "price": {
            "type": "number"
          },
          "priceOutsideTheTariff": {
            "type": "number"
          },
          "priceWithFixedAmountCoverage": {
            "type": "number"
          },
          "priceWithPercentageCoverage": {
            "type": "number"
          },
          "supportAmount": {
            "type": "number"
          },
          "supportPercentage": {
            "type": "number"
          }
        },
        "required": [
          "invoiceId",
          "price",
          "priceWithFixedAmountCoverage",
          "priceWithPercentageCoverage",
          "supportAmount",
          "supportPercentage"
        ]
      },
      "CreateInvoiceDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateInvoiceItemDto"
            }
          },
          "date": {
            "type": "string"
          },
          "totalPriceWithoutSupport": {
            "type": "number"
          },
          "totalPercentageSupport": {
            "type": "number"
          },
          "totalFixedAmountSupport": {
            "type": "number"
          },
          "totalPayable": {
            "type": "number"
          },
          "patientId": {
            "type": "string",
            "format": "uuid"
          },
          "InsuranceInfoId": {
            "type": "string",
            "format": "uuid"
          },
          "paymentGuaranteeId": {
            "type": "string",
            "format": "uuid"
          },
          "referralDiscountId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "items",
          "date",
          "totalPriceWithoutSupport",
          "totalPercentageSupport",
          "totalFixedAmountSupport",
          "totalPayable",
          "patientId",
          "InsuranceInfoId",
          "paymentGuaranteeId",
          "referralDiscountId"
        ]
      },
      "InvoicePaginatedResopnse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invoice"
            }
          }
        },
        "required": ["meta", "links", "items"]
      },
      "UpdateInvoiceDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateInvoiceItemDto"
            }
          },
          "date": {
            "type": "string"
          },
          "totalPriceWithoutSupport": {
            "type": "number"
          },
          "totalPercentageSupport": {
            "type": "number"
          },
          "totalFixedAmountSupport": {
            "type": "number"
          },
          "totalPayable": {
            "type": "number"
          },
          "patientId": {
            "type": "string",
            "format": "uuid"
          },
          "InsuranceInfoId": {
            "type": "string",
            "format": "uuid"
          },
          "paymentGuaranteeId": {
            "type": "string",
            "format": "uuid"
          },
          "referralDiscountId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "AttachRefferalDiscount": {
        "type": "object",
        "properties": {
          "referralDiscountId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": ["referralDiscountId"]
      },
      "AttachPaymentGuaranteeDto": {
        "type": "object",
        "properties": {
          "paymentGuaranteeId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": ["paymentGuaranteeId"]
      },
      "AddTreatmentPlanDto": {
        "type": "object",
        "properties": {
          "treatmentPlanId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": ["treatmentPlanId"]
      },
      "DeleteTreatmentPlanDto": {
        "type": "object",
        "properties": {
          "treatmentPlanId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": ["treatmentPlanId"]
      },
      "CreateMedicineDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": ["name", "description"]
      },
      "MedicinePaginatedResopnse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Medicine"
            }
          }
        },
        "required": ["meta", "links", "items"]
      },
      "UpdateMedicineDto": {
        "type": "object",
        "properties": {}
      },
      "CreatePrescriptionDto": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "medicineIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": ["patientId"]
      },
      "PrescriptionPaginatedResopnse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Prescription"
            }
          }
        },
        "required": ["meta", "links", "items"]
      },
      "UpdatePrescriptionDto": {
        "type": "object",
        "properties": {}
      },
      "CreateProsAndConsDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 200
          },
          "type": {
            "type": "string",
            "enum": ["Positive", "Negative"]
          },
          "relatedEntity": {
            "type": "string",
            "enum": ["doctor", "patient", "personnel"]
          }
        },
        "required": ["title", "type", "relatedEntity"]
      },
      "PaginateProsAndConsResponseDto": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProsAndConsEntity"
            }
          }
        },
        "required": ["meta", "links", "data"]
      },
      "UpdateProsAndConsDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 200
          },
          "type": {
            "type": "string",
            "enum": ["Positive", "Negative"]
          },
          "relatedEntity": {
            "type": "string",
            "enum": ["doctor", "patient", "personnel"]
          }
        }
      },
      "RatePatientDto": {
        "type": "object",
        "properties": {
          "patientId": {
            "type": "string",
            "format": "uuid"
          },
          "treatmentId": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "rate": {
            "type": "number",
            "minimum": 1,
            "maximum": 5
          },
          "prosAndConsIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": ["patientId", "treatmentId", "rate", "prosAndConsIds"]
      },
      "RateDoctorDto": {
        "type": "object",
        "properties": {
          "doctorId": {
            "type": "string",
            "format": "uuid"
          },
          "treatmentId": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "rate": {
            "type": "number",
            "minimum": 1,
            "maximum": 5
          },
          "prosAndConsIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": ["doctorId", "treatmentId", "rate", "prosAndConsIds"]
      },
      "CreateGiftCodeDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["score", "walletCredit", "discount"]
          },
          "expirationDate": {
            "format": "date-time",
            "type": "string"
          },
          "score": {
            "type": "number",
            "minimum": 0
          },
          "credit": {
            "type": "number",
            "minimum": 0
          },
          "discountPercentage": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "discountAmount": {
            "type": "number",
            "minimum": 0
          }
        },
        "required": ["type", "expirationDate"]
      },
      "GiftCodeEntity": {
        "type": "object",
        "properties": {
          "generationDate": {
            "format": "date-time",
            "type": "string"
          },
          "expirationDate": {
            "format": "date-time",
            "type": "string"
          },
          "usedAt": {
            "format": "date-time",
            "type": "string"
          },
          "usedBy": {
            "$ref": "#/components/schemas/User"
          },
          "enabled": {
            "type": "boolean"
          },
          "type": {
            "enum": ["score", "walletCredit", "discount"],
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "score": {
            "type": "number"
          },
          "credit": {
            "type": "number"
          },
          "discountPercentage": {
            "type": "number"
          },
          "discountAmount": {
            "type": "number"
          },
          "id": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "creatorId": {
            "type": "string"
          }
        },
        "required": [
          "generationDate",
          "expirationDate",
          "usedAt",
          "usedBy",
          "enabled",
          "type",
          "code",
          "score",
          "credit",
          "discountPercentage",
          "discountAmount",
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId"
        ]
      },
      "PaginatedGiftCodeResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/PaginationMetaDto"
          },
          "links": {
            "$ref": "#/components/schemas/PaginationLinksDto"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GiftCodeEntity"
            }
          }
        },
        "required": ["meta", "links", "data"]
      },
      "ExchangeGiftCodeDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "minLength": 10,
            "maxLength": 10
          }
        },
        "required": ["code"]
      },
      "AdminExchangeGiftCodeDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "minLength": 10,
            "maxLength": 10
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": ["code", "userId"]
      }
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
